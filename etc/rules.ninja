
c_defines = -D_POSIX_SOURCE
c_includes = -Ilib/musl/src/internal -Ilib-overlay/musl/arch/wasm32 -Ilib/musl/arch/generic -isystem lib/musl/include

chost = -target wasm32
cc_standard = -std=c11
cxx_standard = -std=c++14

cc = clang
cxx = clang++

cpp_flags = $c_defines $c_includes
cc_flags = $chost $cc_standard -nostdinc
cxx_flags = $chost $cxx_standard -nostdinc -nostdinc++

c_deps_opt = -MMD -MF
c_out_opt = -S -emit-llvm -o

opt_flags = -O3 -std-link-opts -S -internalize -internalize-public-api-list=entry_point
wast_opt_flags = -O
rule configure
  command = ./configure
  description = CONFIGURE
  depfile = $out.dep
  restat = 1
  generator = 1

rule cc
  command = $cc $cpp_flags $cc_flags $c_deps_opt $depfile $c_out_opt $out $in
  description = CC $out
  depfile = $out.dep
  deps = gcc

rule cxx
  command = $cxx $cpp_flags $cxx_flags $c_deps_opt $depfile $c_out_opt $out $in
  description = CXX $out
  depfile = $out.dep
  deps = gcc

rule link
  command = llvm-link -S -o $out $in

rule opt
  command = opt $opt_flags -o $out $in

rule llc
  command = llc -filetype asm -o $out $in

rule s2wast
  command = s2wasm -s 10240 -o $out $in
  description = S2WASM $out

rule wast-opt
  command = wasm-opt $wast_opt_flags -o $out $in
  description = WAST-OPT $out

rule wast2wasm
  command = wasm-as -o $out $in
  description = WAST2WASM $out

rule run
  command = d8 --expose_wasm $driver -- $binary $args && touch $out
  description = RUN $binary
